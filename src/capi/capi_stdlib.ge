note

	description: "Class that covers Standard C stdlib.h."

	author: "Berend de Boer"

class

	CAPI_STDLIB


feature {NONE} -- dynamic memory

	posix_calloc (num_of_elements, element_size: INTEGER): POINTER
			-- Allocates and zeroes memory
		require
			valid_args: num_of_elements >= 0 and element_size >= 0
		external "C"
		ensure
			-- a_size = 0 implies Result = default_pointer
		end

	posix_free (p: POINTER)
			-- Deallocates dynamic memory
		require
			-- any p including NULL is valid
		external "C"
		end

	posix_malloc (a_size: INTEGER): POINTER
			-- Allocates dynamic memory
		require
			-- any p including NULL is valid
			valid_size: a_size >= 0
		external "C"
		ensure
			-- a_size = 0 implies Result = default_pointer
			-- returns default_pointer when no memory
		end

	posix_realloc(p: POINTER; a_size: INTEGER): POINTER
			-- Changes the size of a memory object
		require
			-- any p including NULL is valid
			valid_size: a_size >= 0
		external "C"
		ensure
			-- a_size = 0 implies Result = default_pointer
		end;


feature {NONE} -- miscellaneous

	posix_abort
			-- Causes abnormal process termination
		external "C"
		end

	posix_exit (a_status: INTEGER)
			-- cause normal program termination
			-- `a_status' is returned to its parent
		external "C"
		end

	posix_getenv (a_name: POINTER): POINTER
			-- Gets the environment variable
		external "C"
		end

	posix_system (a_string: POINTER): INTEGER
			-- pass a command to the shell
#ifdef ISE
		external "C blocking"
#else
		external "C"
#endif
		end


feature {NONE} -- random numbers

	posix_rand: INTEGER
			-- return pseudo-random integer between 0 and `RAND_MAX'
		external "C"
		end

	posix_srand (a_seed: INTEGER)
			-- `a_seed' is used for new sequence of psuedo-raondom
			-- integers
		external "C"
		end


end -- class CAPI_STDLIB
