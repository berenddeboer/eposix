indexing

   description: "Singleton accessor class."
   thanks: "Thanks to Design Patterns and Contracts."

   usage: "COPY THIS CLASS, DO NOT INHERIT, THAT'S WHY IT DOESN'T COMPILE"

   author: "Berend de Boer"
   date: "$Date: Tue, 21 Aug 2001 18:27:33 +0200 $"
   revision: "$Revision: 1.3 $"

deferred class

   EPX_SINGLETON_ACCESSOR

obsolete "don't use directly. copy this class, do not inherit!"

feature {NONE} -- private

   singleton: EPX_SINGLETON is
         -- Access to a unique instance
         -- Should be redefined as a once function in concrete subclasses
      once
         -- YOUR CREATE HERE
         create Result
      end

   -- GIVE THIS ROUTINE A UNIQUE NAME
   is_real_singleton: BOOLEAN is
         -- Do multiple calls to `singleton' return the same result?
      do
         Result := singleton = singleton
      end


invariant

   accessing_real_singleton: is_real_singleton

oops, see usage

end -- class EPX_SINGLETON_ACCESSOR
